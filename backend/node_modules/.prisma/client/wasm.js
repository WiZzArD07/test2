
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('@prisma/client/runtime/wasm-engine-edge.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.16.3
 * Query Engine version: bb420e667c1820a8c05a38023385f6cc7ef8e83a
 */
Prisma.prismaVersion = {
  client: "6.16.3",
  engine: "bb420e667c1820a8c05a38023385f6cc7ef8e83a"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.CompanyScalarFieldEnum = {
  id: 'id',
  name: 'name',
  currency: 'currency',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  email: 'email',
  passwordHash: 'passwordHash',
  firstName: 'firstName',
  lastName: 'lastName',
  role: 'role',
  companyId: 'companyId',
  managerId: 'managerId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.ExpenseScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  amount: 'amount',
  currency: 'currency',
  category: 'category',
  description: 'description',
  status: 'status',
  date: 'date',
  receiptUrl: 'receiptUrl',
  workflowId: 'workflowId',
  currentStep: 'currentStep',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.WorkflowScalarFieldEnum = {
  id: 'id',
  name: 'name',
  companyId: 'companyId',
  ruleType: 'ruleType',
  ruleConfig: 'ruleConfig',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.WorkflowStepScalarFieldEnum = {
  id: 'id',
  workflowId: 'workflowId',
  stepNumber: 'stepNumber',
  approverRole: 'approverRole'
};

exports.Prisma.ExpenseApprovalScalarFieldEnum = {
  id: 'id',
  expenseId: 'expenseId',
  workflowStepId: 'workflowStepId',
  approverId: 'approverId',
  status: 'status',
  comments: 'comments',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.NullableJsonNullValueInput = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};

exports.Prisma.JsonNullValueFilter = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull,
  AnyNull: Prisma.AnyNull
};
exports.Role = exports.$Enums.Role = {
  ADMIN: 'ADMIN',
  MANAGER: 'MANAGER',
  EMPLOYEE: 'EMPLOYEE',
  FINANCE: 'FINANCE',
  DIRECTOR: 'DIRECTOR'
};

exports.ExpenseStatus = exports.$Enums.ExpenseStatus = {
  PENDING: 'PENDING',
  APPROVED: 'APPROVED',
  REJECTED: 'REJECTED',
  PROCESSING: 'PROCESSING'
};

exports.ApprovalStatus = exports.$Enums.ApprovalStatus = {
  PENDING: 'PENDING',
  APPROVED: 'APPROVED',
  REJECTED: 'REJECTED'
};

exports.WorkflowRuleType = exports.$Enums.WorkflowRuleType = {
  SEQUENTIAL: 'SEQUENTIAL',
  PERCENTAGE: 'PERCENTAGE',
  SPECIFIC_APPROVER: 'SPECIFIC_APPROVER'
};

exports.Prisma.ModelName = {
  Company: 'Company',
  User: 'User',
  Expense: 'Expense',
  Workflow: 'Workflow',
  WorkflowStep: 'WorkflowStep',
  ExpenseApproval: 'ExpenseApproval'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "C:\\Users\\ARYAN\\OneDrive\\Desktop\\expense-management-system\\backend\\node_modules\\@prisma\\client",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "windows",
        "native": true
      }
    ],
    "previewFeatures": [],
    "sourceFilePath": "C:\\Users\\ARYAN\\OneDrive\\Desktop\\expense-management-system\\backend\\prisma\\schema.prisma"
  },
  "relativeEnvPaths": {
    "rootEnvPath": null,
    "schemaEnvPath": "../../../.env"
  },
  "relativePath": "../../../prisma",
  "clientVersion": "6.16.3",
  "engineVersion": "bb420e667c1820a8c05a38023385f6cc7ef8e83a",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "postgresql",
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": "DATABASE_URL",
        "value": null
      }
    }
  },
  "inlineSchema": "// backend/prisma/schema.prisma\n\ngenerator client {\n  provider = \"prisma-client-js\"\n}\n\ndatasource db {\n  provider = \"postgresql\"\n  url      = env(\"DATABASE_URL\")\n}\n\nmodel Company {\n  id        String     @id @default(uuid())\n  name      String\n  currency  String     @db.VarChar(3)\n  createdAt DateTime   @default(now())\n  updatedAt DateTime   @updatedAt\n  users     User[]\n  workflows Workflow[]\n}\n\nmodel User {\n  id           String            @id @default(uuid())\n  email        String            @unique\n  passwordHash String\n  firstName    String\n  lastName     String\n  role         Role              @default(EMPLOYEE)\n  companyId    String\n  company      Company           @relation(fields: [companyId], references: [id])\n  managerId    String?\n  manager      User?             @relation(\"ManagerSubordinates\", fields: [managerId], references: [id])\n  subordinates User[]            @relation(\"ManagerSubordinates\")\n  expenses     Expense[]\n  approvals    ExpenseApproval[]\n  createdAt    DateTime          @default(now())\n  updatedAt    DateTime          @updatedAt\n}\n\nmodel Expense {\n  id          String            @id @default(uuid())\n  userId      String\n  user        User              @relation(fields: [userId], references: [id])\n  amount      Float\n  currency    String            @db.VarChar(3)\n  category    String\n  description String?\n  status      ExpenseStatus     @default(PENDING)\n  date        DateTime\n  receiptUrl  String?\n  workflowId  String?\n  workflow    Workflow?         @relation(fields: [workflowId], references: [id])\n  approvals   ExpenseApproval[]\n  currentStep Int               @default(1)\n  createdAt   DateTime          @default(now())\n  updatedAt   DateTime          @updatedAt\n}\n\nmodel Workflow {\n  id         String           @id @default(uuid())\n  name       String\n  companyId  String\n  company    Company          @relation(fields: [companyId], references: [id])\n  steps      WorkflowStep[]\n  expenses   Expense[]\n  ruleType   WorkflowRuleType @default(SEQUENTIAL)\n  ruleConfig Json? // e.g., {\"percentage\": 60} or {\"approverId\": \"uuid\"}\n  createdAt  DateTime         @default(now())\n  updatedAt  DateTime         @updatedAt\n}\n\nmodel WorkflowStep {\n  id           String   @id @default(uuid())\n  workflowId   String\n  workflow     Workflow @relation(fields: [workflowId], references: [id])\n  stepNumber   Int\n  approverRole Role // e.g., MANAGER, FINANCE\n\n  @@unique([workflowId, stepNumber])\n}\n\nmodel ExpenseApproval {\n  id             String         @id @default(uuid())\n  expenseId      String\n  expense        Expense        @relation(fields: [expenseId], references: [id])\n  workflowStepId String\n  approverId     String? // The user who took action\n  approver       User?          @relation(fields: [approverId], references: [id])\n  status         ApprovalStatus @default(PENDING)\n  comments       String?\n  createdAt      DateTime       @default(now())\n  updatedAt      DateTime       @updatedAt\n}\n\nenum Role {\n  ADMIN\n  MANAGER\n  EMPLOYEE\n  FINANCE\n  DIRECTOR\n}\n\nenum ExpenseStatus {\n  PENDING\n  APPROVED\n  REJECTED\n  PROCESSING\n}\n\nenum ApprovalStatus {\n  PENDING\n  APPROVED\n  REJECTED\n}\n\nenum WorkflowRuleType {\n  SEQUENTIAL // All steps must be approved in order\n  PERCENTAGE // A certain percentage of approvers must approve\n  SPECIFIC_APPROVER // A specific approver's decision is final\n}\n",
  "inlineSchemaHash": "0e5a4cc3741f772f033abc9681b8ad4716ff200e09405af6e778a06703fc7275",
  "copyEngine": true
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"Company\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"currency\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"users\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"CompanyToUser\"},{\"name\":\"workflows\",\"kind\":\"object\",\"type\":\"Workflow\",\"relationName\":\"CompanyToWorkflow\"}],\"dbName\":null},\"User\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"passwordHash\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"firstName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"lastName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"role\",\"kind\":\"enum\",\"type\":\"Role\"},{\"name\":\"companyId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"company\",\"kind\":\"object\",\"type\":\"Company\",\"relationName\":\"CompanyToUser\"},{\"name\":\"managerId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"manager\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"ManagerSubordinates\"},{\"name\":\"subordinates\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"ManagerSubordinates\"},{\"name\":\"expenses\",\"kind\":\"object\",\"type\":\"Expense\",\"relationName\":\"ExpenseToUser\"},{\"name\":\"approvals\",\"kind\":\"object\",\"type\":\"ExpenseApproval\",\"relationName\":\"ExpenseApprovalToUser\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"Expense\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"ExpenseToUser\"},{\"name\":\"amount\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"currency\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"category\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"ExpenseStatus\"},{\"name\":\"date\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"receiptUrl\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"workflowId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"workflow\",\"kind\":\"object\",\"type\":\"Workflow\",\"relationName\":\"ExpenseToWorkflow\"},{\"name\":\"approvals\",\"kind\":\"object\",\"type\":\"ExpenseApproval\",\"relationName\":\"ExpenseToExpenseApproval\"},{\"name\":\"currentStep\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"Workflow\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"companyId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"company\",\"kind\":\"object\",\"type\":\"Company\",\"relationName\":\"CompanyToWorkflow\"},{\"name\":\"steps\",\"kind\":\"object\",\"type\":\"WorkflowStep\",\"relationName\":\"WorkflowToWorkflowStep\"},{\"name\":\"expenses\",\"kind\":\"object\",\"type\":\"Expense\",\"relationName\":\"ExpenseToWorkflow\"},{\"name\":\"ruleType\",\"kind\":\"enum\",\"type\":\"WorkflowRuleType\"},{\"name\":\"ruleConfig\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"WorkflowStep\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"workflowId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"workflow\",\"kind\":\"object\",\"type\":\"Workflow\",\"relationName\":\"WorkflowToWorkflowStep\"},{\"name\":\"stepNumber\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"approverRole\",\"kind\":\"enum\",\"type\":\"Role\"}],\"dbName\":null},\"ExpenseApproval\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"expenseId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"expense\",\"kind\":\"object\",\"type\":\"Expense\",\"relationName\":\"ExpenseToExpenseApproval\"},{\"name\":\"workflowStepId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"approverId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"approver\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"ExpenseApprovalToUser\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"ApprovalStatus\"},{\"name\":\"comments\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = {
  getRuntime: async () => require('./query_engine_bg.js'),
  getQueryEngineWasmModule: async () => {
    const loader = (await import('#wasm-engine-loader')).default
    const engine = (await loader).default
    return engine
  }
}
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {
    DATABASE_URL: typeof globalThis !== 'undefined' && globalThis['DATABASE_URL'] || typeof process !== 'undefined' && process.env && process.env.DATABASE_URL || undefined
  }
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

